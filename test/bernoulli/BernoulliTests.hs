import           Test.Hspec

import           Data.Ratio

import           Bernoulli

main :: IO ()
main = hspec $ parallel $ do
    describe "[Bernoulli] Basic" $ do
      it "B(0) = 1" $ do
        bernoulli 0 `shouldBe` 1
      it "B(1) = -1/2" $ do
        bernoulli 1 `shouldBe` (-1) % 2
      it "B(2) = 1/6" $ do
        bernoulli 2 `shouldBe` 1 % 6
      it "B(3) = 0" $ do
        bernoulli 3 `shouldBe` 0
      it "B(4) = -1/30" $ do
        bernoulli 4 `shouldBe` (-1) % 30
      it "B(5) = 0" $ do
        bernoulli 5 `shouldBe` 0
      it "B(6) = 1/42" $ do
        bernoulli 6 `shouldBe` 1 % 42
    describe "[Bernoulli] Advanced" $ do
      it "B(42) = 1520097643918070802691/1806" $ do
        bernoulli 42 `shouldBe` 1520097643918070802691 % 1806
      it "B(100) = -94598037819122125295227433069493721872702841533066936133385696204311395415197247711" $ do
        bernoulli 100 `shouldBe` (-94598037819122125295227433069493721872702841533066936133385696204311395415197247711) % 33330
      it "B(500) = ~1e743/8365830" $ do
        bernoulli 500 `shouldBe` (-16596380640568557229852123088077134206658664302806671892352650993155331641220960084014956088135770921465025323942809207851857992860213463783252745409096420932509953165466735675485979034817619983727209844291081908145597829674980159889976244240633746601120703300698329029710482600069717866917229113749797632930033559794717838407415772796504419464932337498642714226081743688706971990010734262076881238322867559275748219588404488023034528296023051638858467185173202483888794342720837413737644410765563213220043477396887812891242952336301344808165757942109887803692579439427973561487863524556256869403384306433922049078300720480361757680714198044230522015775475287075315668886299978958150756677417180004362981454396613646612327019784141740499835461) % 8365830
